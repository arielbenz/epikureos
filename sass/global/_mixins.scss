@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin bodytext {
  font-family: $type-default;
  font-size: 1rem;
  line-height: 1.5;
  color: $black;
}

/**
 * usage: 
 * @include rem-fallback(margin, 10, 20, 30, 40);
 *
 * result:
 * margin: 160px 320px 480px 640px;
 * margin: 10rem 20rem 30rem 40rem;
 */

@mixin rem-fallback($property, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    @if nth($values, $i) == auto {
      $value: auto;
      $pxValues: #{$pxValues + $value};
    } @else {
      $value: strip-unit(nth($values, $i));
      $pxValues: #{$pxValues + $value*16}px;
    }

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  } 

  @for $i from 1 through $max {
    @if nth($values, $i) == auto {
      $value: auto;
      $remValues: #{$remValues + $value};
    } @else {
      $value: strip-unit(nth($values, $i));
      $remValues: #{$remValues + $value}rem;
    }

    @if $i < $max {
        $remValues: #{$remValues + " "};
    }
  } 
  
  #{$property}: $pxValues; 
  #{$property}: $remValues; 
}

/*  CLEARFIX  */
@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}